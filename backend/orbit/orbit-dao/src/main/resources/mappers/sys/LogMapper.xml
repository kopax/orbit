<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.inmaytide.orbit.model.sys.Log">


    <select id="findCount" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(1) from sys_log
        <where>
            <if test="conditions.keywords != null and conditions.keywords != ''">
                (instr(message, #{conditions.keywords})
                or operator in (select id from sys_user where instr(name, #{conditions.keywords}))
                or instr(name, #{conditions.keywords})
                or instr(is_succeed,  #{conditions.keywords})
                or instr(ip_address, #{conditions.keywords}))
            </if>
            <if test="conditions.begin != null">
                and time >= #{conditions.begin}
            </if>
            <if test="conditions.end != null">
                and time &lt;= #{conditions.end}
            </if>
        </where>
    </select>


    <select id="findList" parameterType="java.util.Map" resultType="com.inmaytide.orbit.model.sys.Log">
        select id, operator, log.time, log.name, message,
               is_succeed isSucceed, ip_address ipAddress,
               class_name className, method_name methodName,
               (select u.name from sys_user u where u.id = operator) operatorName
        from sys_log log
        <where>
            <if test="conditions.keywords != null and conditions.keywords != ''">
                (instr(message, #{conditions.keywords})
                or operator in (select id from sys_user where instr(name, #{conditions.keywords}))
                or instr(name, #{conditions.keywords})
                or instr(is_succeed,  #{conditions.keywords})
                or instr(ip_address, #{conditions.keywords}))
            </if>
            <if test="conditions.begin != null">
                and time >= #{conditions.begin}
            </if>
            <if test="conditions.end != null">
                and time &lt;= #{conditions.end}
            </if>
        </where>
        order by time desc
        <if test="conditions.size != null">
            limit #{conditions.size} offset #{conditions.offset}
        </if>
    </select>

</mapper>